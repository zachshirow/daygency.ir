---
import BlogCard from '@/components/BlogCard.astro'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import Container from '@/components/Container.astro'
import Layout from '@/layouts/Layout.astro'
import { Icon } from 'astro-icon/components'
import { type CollectionEntry, getCollection } from 'astro:content'


type Content = CollectionEntry<'blog'> | CollectionEntry<'services'>

type Props = {
  tag: string
  content: Content[]
}

const { tag, content } = Astro.props

export async function getStaticPaths() {
  const blog = await getCollection('blog')
  const services = await getCollection('services')
  const content = [...blog, ...services]


  const tags = content.flatMap((post) => post.data.tags || [])
  const uniqueTags = Array.from(
    new Set(tags.filter((tag): tag is string => typeof tag === 'string')),
  )

  return uniqueTags.map((tag) => ({
    params: { id: tag },
    props: {
      tag,
      content: content.filter((post) => post.data.tags?.includes(tag)),
    },
  }))
}
---

<Layout
  title={`Posts tagged with "${tag}"`}
  description={`A collection of posts tagged with ${tag}.`}
>
  <Container class="flex flex-col gap-y-6">
    <Breadcrumbs
      items={[
        { href: '/tags', label: 'تگ ها', icon: 'lucide:tags' },
        { label: tag, icon: 'lucide:tag' },
      ]}
    />
    <div class="flex flex-wrap items-center gap-2">
      <h1 class="text-3xl font-semibold">پست ها با تگ: </h1>
      <span
        class="flex items-center gap-x-1 rounded-full bg-secondary px-4 py-2 text-2xl font-semibold"
      >
        <Icon name="lucide:hash" class="size-6 -translate-x-0.5" />{tag}
      </span>
    </div>
    <div class="flex flex-col gap-y-4">
      {
        content.map((post) => (
          <section class="flex flex-col gap-y-4">
            <div>
              <ul class="not-prose flex flex-col gap-4">
                <li>
                  <BlogCard entry={post} />
                </li>
              </ul>
            </div>
          </section>
        ))
      }
    </div>
  </Container>
</Layout>
